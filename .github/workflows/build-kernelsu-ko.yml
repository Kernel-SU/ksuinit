name: Build KernelSU kernel modules

on:
  workflow_dispatch:
    inputs:
      kernelsu_tag:
        description: 'KernelSU release tag or commit'
        required: false
        default: 'main'
        type: string

env:
  DDK_RELEASE: 20250825

jobs:
  build-kernelsu-ko:
    name: Build kernelsu.ko for ${{ matrix.kmi }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ylarod/ddk-dev:${{ matrix.kmi }}-${env.DDK_RELEASE}
      options: --privileged

    strategy:
      fail-fast: false
      matrix:
        kmi:
          - android12-5.10
          - android13-5.10
          - android13-5.15
          - android14-5.15
          - android14-6.1
          - android15-6.6
          - android16-6.12

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        path: ksuinit

    - name: Clone KernelSU repository
      run: |
        echo "Cloning KernelSU from https://github.com/tiann/KernelSU"
        git clone https://github.com/tiann/KernelSU kernelsu
        cd kernelsu
        
        # Checkout specified tag/commit if provided
        if [ "${{ github.event.inputs.kernelsu_tag }}" != "" ] && [ "${{ github.event.inputs.kernelsu_tag }}" != "main" ]; then
          echo "Checking out KernelSU tag/commit: ${{ github.event.inputs.kernelsu_tag }}"
          git checkout ${{ github.event.inputs.kernelsu_tag }}
        fi
        
        echo "=== KernelSU Repository Info ==="
        git log --oneline -5
        echo "Current commit: $(git rev-parse HEAD)"

    - name: Build kernelsu.ko
      run: |
        cp ksuinit/.github/scripts/Makefile kernelsu/kernel/Makefile

        cd kernelsu/kernel

        echo "=== Building kernelsu.ko for KMI: ${{ matrix.kmi }} ==="

        KSU_GIT_VERSION=$(git rev-list --count HEAD) make
        
        echo "=== Build completed ==="

        # Create output directory in GitHub workspace
        mkdir -p /github/workspace/out
        
        # Copy with KMI-specific naming
        OUTPUT_NAME="kernelsu-${{ matrix.kmi }}.ko"
        cp kernelsu.ko "/github/workspace/out/$OUTPUT_NAME"
        
        echo "Copied to: /github/workspace/out/$OUTPUT_NAME"
        ls -la "/github/workspace/out/$OUTPUT_NAME"
        echo "Size: $(du -h "/github/workspace/out/$OUTPUT_NAME" | cut -f1)"
        llvm-strip -d "/github/workspace/out/$OUTPUT_NAME"
        echo "Size after stripping: $(du -h "/github/workspace/out/$OUTPUT_NAME" | cut -f1)"

    - name: Upload kernelsu.ko artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernelsu-${{ matrix.kmi }}.ko
        path: /github/workspace/out/kernelsu-${{ matrix.kmi }}.ko

  collect-artifacts:
    name: Collect all artifacts
    runs-on: ubuntu-latest
    needs: build-kernelsu-ko
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List built modules
      run: |
        echo "=== Built KernelSU Modules ==="
        find artifacts -name "*.ko" -type f | while read ko_file; do
          echo "üì¶ $(basename "$ko_file") ($(du -h "$ko_file" | cut -f1))"
        done
        
        echo ""
        echo "=== Build Matrix Results ==="
        total_expected=6
        total_found=$(find artifacts -name "*.ko" -type f | wc -l)
        echo "Expected: $total_expected modules"
        echo "Built: $total_found modules"
        
        if [ $total_found -eq $total_expected ]; then
          echo "‚úÖ All KMI variants built successfully!"
        else
          echo "‚ö†Ô∏è  Some builds may have failed"
        fi
