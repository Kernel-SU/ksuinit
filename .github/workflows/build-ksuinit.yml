name: Build ksuinit

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
    paths:
      - '.github/workflows/build-ksuinit.yml'
      - 'src/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'src/**'

jobs:
  build-kernelsu-ko:
    name: Build kernelsu.ko for ${{ matrix.kmi }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        kmi:
          - android12-5.10
          - android13-5.10
          - android13-5.15
          - android14-5.15
          - android14-6.1
          - android15-6.6
          # - android16-6.12

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        path: ksuinit

    - name: Clone KernelSU repository
      run: |
        echo "Cloning KernelSU from https://github.com/tiann/KernelSU"
        git clone https://github.com/tiann/KernelSU kernelsu
        cd kernelsu
        
        # Checkout specified tag/commit if provided
        if [ "${{ github.event.inputs.kernelsu_tag }}" != "" ] && [ "${{ github.event.inputs.kernelsu_tag }}" != "main" ]; then
          echo "Checking out KernelSU tag/commit: ${{ github.event.inputs.kernelsu_tag }}"
          git checkout ${{ github.event.inputs.kernelsu_tag }}
        fi
        
        echo "=== KernelSU Repository Info ==="
        git log --oneline -5
        echo "Current commit: $(git rev-parse HEAD)"

    - name: Build kernelsu.ko
      run: |
        cp ksuinit/.github/scripts/Makefile kernelsu/kernel/Makefile

        cd kernelsu/kernel

        echo "=== Building kernelsu.ko for KMI: ${{ matrix.kmi }} ==="

        docker run --rm -v $(pwd):/build ghcr.io/ylarod/ddk-dev:${{ matrix.kmi }}-20250825 KSU_GIT_VERSION=$(git rev-list --count HEAD) make
        
        echo "=== Build completed ==="

        # Create output directory in GitHub workspace
        mkdir -p /github/workspace/out
        
        # Copy with KMI-specific naming
        OUTPUT_NAME="kernelsu-${{ matrix.kmi }}.ko"
        cp kernelsu.ko "/github/workspace/out/$OUTPUT_NAME"
        
        echo "Copied to: /github/workspace/out/$OUTPUT_NAME"
        ls -la "/github/workspace/out/$OUTPUT_NAME"
        echo "Size: $(du -h "/github/workspace/out/$OUTPUT_NAME" | cut -f1)"
        llvm-strip -d "/github/workspace/out/$OUTPUT_NAME"
        echo "Size after stripping: $(du -h "/github/workspace/out/$OUTPUT_NAME" | cut -f1)"

    - name: Upload kernelsu.ko artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernelsu-${{ matrix.kmi }}.ko
        path: /github/workspace/out/kernelsu-${{ matrix.kmi }}.ko
  
  build-ksuinit:
    name: Build ksuinit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Rust target
      run: |
        rustup update stable
        rustup target add aarch64-unknown-linux-musl
        rustup target add x86_64-unknown-linux-musl
        RUSTFLAGS="" cargo install cross --git https://github.com/cross-rs/cross --rev 66845c1

    - name: Build for aarch64
      run: cross build --target aarch64-unknown-linux-musl --release

    - name: Build for x86_64
      run: cross build --target x86_64-unknown-linux-musl --release

    - name: Upload aarch64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-aarch64
        path: target/aarch64-unknown-linux-musl/release/ksuinit

    - name: Upload x86_64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-x86_64
        path: target/x86_64-unknown-linux-musl/release/ksuinit

    - name: Prepare release assets
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir -p release
        cp target/aarch64-unknown-linux-musl/release/ksuinit release/ksuinit-aarch64
        cp target/x86_64-unknown-linux-musl/release/ksuinit release/ksuinit-x86_64

    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release/

  release:
    name: Publish GitHub Release
    needs: build-ksuinit
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-assets
        path: release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/ksuinit-aarch64
          release/ksuinit-x86_64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}