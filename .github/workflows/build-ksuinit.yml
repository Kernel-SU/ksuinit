name: Build ksuinit

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
    paths:
      - '.github/workflows/build-ksuinit.yml'
      - 'src/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'src/**'

jobs:
  build-kernelsu-ko:
    name: Build kernelsu.ko for ${{ matrix.kmi }}
    uses: ./.github/workflows/ddk-lkm.yml
    strategy:
      fail-fast: false
      matrix:
        kmi:
          - android12-5.10
          - android13-5.10
          - android13-5.15
          - android14-5.15
          - android14-6.1
          - android15-6.6
    with:
      kmi: ${{ matrix.kmi }}
      ddk_release: '20250825'
      kernelsu_tag: 'main'

  build-ksuinit:
    name: Build ksuinit
    runs-on: ubuntu-latest
    needs: build-kernelsu-ko

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: assets
    
    - name: List built modules
      run: |
        echo "=== Built KernelSU Modules ==="
        ls -al .
        find assets -name "*.ko" -type f | while read ko_file; do
          echo "ðŸ“¦ $(basename "$ko_file") ($(du -h "$ko_file" | cut -f1))"
        done

    - name: Install Rust target
      run: |
        rustup update stable
        rustup target add aarch64-unknown-linux-musl
        rustup target add x86_64-unknown-linux-musl
        RUSTFLAGS="" cargo install cross --git https://github.com/cross-rs/cross --rev 66845c1

    - name: Build for aarch64
      run: cross build --target aarch64-unknown-linux-musl --release

    - name: Build for x86_64
      run: cross build --target x86_64-unknown-linux-musl --release

    - name: Upload aarch64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-aarch64
        path: target/aarch64-unknown-linux-musl/release/ksuinit

    - name: Upload x86_64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ksuinit-x86_64
        path: target/x86_64-unknown-linux-musl/release/ksuinit

    - name: Prepare release assets
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir -p release
        cp target/aarch64-unknown-linux-musl/release/ksuinit release/ksuinit-aarch64
        cp target/x86_64-unknown-linux-musl/release/ksuinit release/ksuinit-x86_64

    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release/

  release:
    name: Publish GitHub Release
    needs: build-ksuinit
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-assets
        path: release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/ksuinit-aarch64
          release/ksuinit-x86_64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}